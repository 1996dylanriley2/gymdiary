@model List<GymDiaryCodeFirst.Models.ExerciseStats>

@{
    ViewBag.Title = "Details";
    var muscleIds = ViewBag.MuscleIds;
}
<script src="https://code.highcharts.com/highcharts.src.js"></script>
<h2>Details</h2>

<div>
    <h4>Workout</h4>
    <hr />
    

    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#home">Home</a></li>
        @{
            int counter = 0;
            foreach (var id in muscleIds)
            {
                counter++;
                <li><a data-toggle="tab" href="#menu@(counter)">Muscle @(counter)</a></li>

            }
        }
    </ul>

    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            <h3>Workout Summary</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Exercise/Reps</th>
                        <th>Weight Kg</th>
                        <th>Reps</th>
                        <th>Duration</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var exercise in Model)
            {
                for (var x = 0; x < exercise.ActualSets.Count; x++)
                {
                    var set = x + 1;
                            <tr>
                                <td>
                                    @exercise.Exercise.Name #@set
                                </td>
                                <td>
                                    @exercise.ActualSets[x].WeightInKg
                                </td>
                                <td>
                                    @exercise.ActualSets[x].Reps
                                </td>
                                <td>
                                    @exercise.ActualSets[x].Minutes
                                </td>
                            </tr>
                        }


                    }
                </tbody>


            </table>
        </div>
        @{
                int count = 0;
                foreach (var id in muscleIds)
                {
                    count++;
                    var elId = "menu" + count.ToString();
                <div id="@(elId)" class="tab-pane fade">
                    <h3>Most recent exercises for specified muscle</h3>
                    <div id="container@(id)" class="graphContainer" style="width: 800px; height: 800px; margin: 0 auto"></div>
                </div>

            }
       }
        
    </div>
</div>
    <!--TODO: have a tab for each muscle with has a graph on-->
    @*@foreach (var id in muscleIds)
    {
        <div id="container@(id)" class="graphContainer" style="width: 800px; height: 800px; margin: 0 auto"></div>
    }*@
    
</div>

<script>
    $(document).ready(function () {
        @{
            foreach (var id in muscleIds)
            {
                @:createGraph(@(id));
            }
        }

        function createGraph(id) {
            $.ajax({
                url: "/api/graph/get?primaryMuscleId=" + id,
                type: "Get",
                success: function (d) {
                    data = JSON.parse(d);
                    function addDateJsDateUTC(data) {
                        for (exercise = 0; exercise < data.length; exercise++) {
                            for (var dataPointCount = 0; dataPointCount < data[exercise].length; dataPointCount++) {
                                var dataPoint = data[exercise][dataPointCount];
                                var dateParts = dataPoint.X.split(",");
                                var date = new Date(dateParts[0], dateParts[1] - 1, dateParts[2], dateParts[3], dateParts[4], dateParts[5]);
                                var dateAsUTC = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());
                                dataPoint.utc = dateAsUTC;
                            }
                        }
                        return data;
                    }

                    function formatToSeriesData(data) {
                        for (var e = 0; e < data.length; e++) {
                            for (var p = 0; p < data[e].length; p++) {
                                var datapoint = data[e][p];
                                data[e][p] = { x: datapoint.utc, y: datapoint.Y, msg: datapoint.tooltipMessage, exercise: datapoint.ExerciseName };
                            }
                        }
                        return data;
                    }

                    function makeSeriseForEachExercise(data) {
                        var series = [];
                        for (var e = 0; e < data.length; e++) {
                            var seriesItem = {};
                            seriesItem.name = data[e][1].exercise;
                            seriesItem.data = data[e];
                            series.push(seriesItem);
                        }
                        return series;
                    }

                    data = addDateJsDateUTC(data);
                    data = formatToSeriesData(data);
                    console.log(makeSeriseForEachExercise(data));
                    data = makeSeriseForEachExercise(data); //data[0];

                    Highcharts.chart('container'+id, {
                        chart: {
                            type: 'spline'
                        },
                        title: {
                            text: ""
                        },
                        subtitle: {
                            text: 'Irregular time data in Highcharts JS'
                        },
                        xAxis: {
                            type: 'datetime',
                            dateTimeLabelFormats: { // don't display the dummy year
                                month: '%e. %b',
                                year: '%b'
                            },
                            title: {
                                text: 'Date'
                            }
                        },
                        yAxis: {
                            title: {
                                text: 'Sum of weight lifted'
                            },
                            min: 0
                        },
                        tooltip: {
                            headerFormat: '<b> {point.key} </b><br>',
                            pointFormat: '{point.msg}'
                        },

                        plotOptions: {
                            spline: {
                                marker: {
                                    enabled: true
                                }
                            }
                        },

                        series: data
                    });

                }
            });
        }
        
    });
        
</script>