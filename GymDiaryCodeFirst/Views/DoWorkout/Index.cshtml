@model GymDiaryCodeFirst.Models.Workout
@{
    ViewBag.Title = "Index";
}

<h2>Workout In Progess...</h2>

@using (Html.BeginForm())
{
    
    @Html.HiddenFor(x => x.WorkoutId);
    for (int i = 0; i < Model.Exercises.Count; i++)
    {
        var showFirstPage = i == 0 ? "" : "hide";
        <div class="virtual-page @(showFirstPage) " id="exercise@(i)">

            @Html.HiddenFor(x => x.Exercises[i].ExerciseId)
            @Html.HiddenFor(x => x.Exercises[i].ExerciseStatsId)
            <h4>@Html.DisplayFor(x => x.Exercises[i].Exercise.Name)</h4>
            @for (var j = 0; j < Model.Exercises[i].DesiredSetCount; j++)
                    {
                <h5>Set #@(j + 1)</h5>
                        <div class="col-sm-4">
                            <div class="input-group">
                                @Html.EditorFor(x => x.Exercises[i].ActualSets[j].Reps, new { htmlAttributes = new { placeholder = "Reps", @class = "form-control", @type="number", @aria_describedby = "reps", autocomplete = "off" } })
                                <span class="input-group-addon" id="reps">Reps</span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="input-group">
                                @Html.EditorFor(x => x.Exercises[i].ActualSets[j].WeightInKg, new { htmlAttributes = new { placeholder = "Weight in KG", @type = "number", @class = "form-control", @aria_describedby = "weight", autocomplete = "off" } })
                                <span class="input-group-addon" id="weight">Kgs</span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="input-group">
                                @Html.EditorFor(x => x.Exercises[i].ActualSets[j].Minutes, new { htmlAttributes = new { placeholder = "Mins", @type = "number", @class = "form-control", @aria_describedby = "mins", autocomplete = "off" } })
                                <span class="input-group-addon" id="mins">Minutes</span>
                            </div>
                        </div>
                        
            }

            
            <div class="pagerContainer">
                @if (i - 1 >= 0)
                {
                    <div class="pagerLink" id="previous">
                        <a href="#exercise@(i-1)">Previous</a>
                    </div>
                }
                else
                {
                    <div class="invis pagerLink" id="previous">
                        <a class="disabledPager">Previous</a>
                    </div>
                }

                @if (i + 1 >= Model.Exercises.Count)
                {
                    <div class="pagerSubmit pagerLink" id="finish">
                        <input type="submit" value="Finish">
                    </div>
                }
                else
                {
                    <div class="pagerLink" id="next">
                        <a href="#exercise@(i+1)">Next</a>
                    </div>
                }
                
            </div>
            
        </div>

        

    }
                
    }

